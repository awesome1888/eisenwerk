version: '3'

services:

  front:
    build:
      context: ../build/app.front/
      dockerfile: docker/development.dockerfile
    expose:
      - 3000
    ports:
      - 3000:3000
    depends_on:
      - db
    restart: on-failure
    volumes:
      - ../build/app.front/build/app.front.client/public/:/usr/src/app/public/
      - ../build/app.front/build/app.front.client/template/:/usr/src/app/template/
      - ../build/app.front/build/app.front.client/assets.html:/usr/src/app/assets.html
    environment:
      - URL.ROOT=http://localhost:3000/
      - PORT=3000
      - FOLDER.PUBLIC=/usr/src/app/public/
      - URL.API=http://localhost:3100
      - FOLDER.ROOT=/usr/src/app

  api:
    build:
      context: ../build/app.api/
      dockerfile: docker/development.dockerfile
    expose:
      - 3100
    ports:
      - 3100:3100
    depends_on:
      - db
    restart: on-failure
    environment:
      - URL.ROOT=http://localhost:3100/
      - PORT=3100
      - URL.DB=mongodb://db:27017/ew
      - CORS.ORIGIN=http://localhost:3000,http://localhost:3010
      - AUTH.SECRET=P4cRdF5mzSMPvy4hCdpKCjHMp3vZ4UvynaxhEAJK
      - AUTH.GOOGLE.CLIENT-ID=
      - AUTH.GOOGLE.SECRET=
      - URL.CLIENT-ORIGIN=http://localhost:3010

  db:
      image: "mongo:latest"
      restart: always
      ports:
        - 3900:27017

#  front.browser-sync:
#    image: ustwo/browser-sync
#    command: start --server --files "*.css"
#    volumes:
#      - ./sandbox:/source
#    ports:
#      - "3000:3000"

#  portainer:
#      image: portainer/portainer
#      ports:
#        - "3800:9000"
#      command: -H unix:///var/run/docker.sock
#      volumes:
#        - /var/run/docker.sock:/var/run/docker.sock
#        - portainer_data:/data

volumes:
  portainer_data:
